{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Final/Ajali-B/frontend/src/components/ResetPassword/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ResetPassword.css';\nimport LogNav from \"../LogNav/lognav\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleResetPassword = async event => {\n    event.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await fetch('/signup', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: newPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error while updating password');\n      }\n      const data = await response.json();\n      console.log(data);\n      setError(\"\");\n    } catch (error) {\n      console.error(\"Update failed\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LogNav, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"resetform\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetformdiv1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resetform__text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Reset Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Please enter your email and new Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"emailinput\",\n          id: \"email\",\n          placeholder: \"Enter Your Email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"fause\",\n          icon: faUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetformdiv2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"passwordinput\",\n          id: \"newpassword\",\n          placeholder: \"Password\",\n          value: newPassword,\n          onChange: event => setNewPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"faloc\",\n          icon: faLock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetformdiv3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"confirmnewpasswordinput\",\n          id: \"confirmnewpassword\",\n          placeholder: \"Confirm-password\",\n          value: confirmNewPassword,\n          onChange: event => setConfirmNewPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"faloc1\",\n          icon: faLock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"resetbtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"k6Mdp+ccYOHsaEqVmVmODZMiDpw=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","LogNav","FontAwesomeIcon","faLock","faUser","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","error","setError","handleResetPassword","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","password","ok","Error","data","json","console","log","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","target","icon","_c","$RefreshReg$"],"sources":["/home/isaac/Final/Ajali-B/frontend/src/components/ResetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './ResetPassword.css';\nimport LogNav from \"../LogNav/lognav\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst ResetPassword = () => {\n    const [email, setEmail] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\n    const [error, setError] = useState(\"\");\n\n    const handleResetPassword = async (event) => {\n        event.preventDefault();\n\n        if (newPassword !== confirmNewPassword) {\n            setError(\"Passwords do not match\")\n            return;\n        }\n\n        try {\n            const response = await fetch('/signup', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    password: newPassword,\n                }),\n            });\n            if (!response.ok) {\n                throw new Error('Error while updating password')\n            }\n            const data = await response.json()\n            console.log(data)\n            setError(\"\")\n        }\n        catch (error) {\n            console.error(\"Update failed\", error.message)\n        }\n    };\n\n    return (\n        <LogNav>\n            <form className=\"resetform\">\n                <div className=\"resetformdiv1\">\n                    <div className=\"resetform__text\">\n                    <h1>Reset Your Password</h1>\n                    <h5>Please enter your email and new Password</h5>\n                    </div>\n                    <input\n                        type=\"email\"\n                        className=\"emailinput\"\n                        id=\"email\"\n                        placeholder=\"Enter Your Email\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n                    <FontAwesomeIcon className=\"fause\" icon={faUser} />\n                </div>\n                <div className=\"resetformdiv2\">\n                    <input\n                        type=\"password\"\n                        className=\"passwordinput\"\n                        id=\"newpassword\"\n                        placeholder=\"Password\"\n                        value={newPassword}\n                        onChange={(event) => setNewPassword(event.target.value)}\n                    />\n                    <FontAwesomeIcon className=\"faloc\" icon={faLock} />\n                </div>\n                <div className=\"resetformdiv3\">\n                    <input\n                        type=\"password\"\n                        className=\"confirmnewpasswordinput\"\n                        id=\"confirmnewpassword\"\n                        placeholder=\"Confirm-password\"\n                        value={confirmNewPassword}\n                        onChange={(event) => setConfirmNewPassword(event.target.value)}\n                    />\n                    <FontAwesomeIcon className=\"faloc1\" icon={faLock} />\n                </div>\n                {error && (<p>{error}</p>)}\n                <button className=\"resetbtn\" type=\"submit\">Submit</button>\n            </form>\n        </LogNav>\n    )    \n}\n\nexport default ResetPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}