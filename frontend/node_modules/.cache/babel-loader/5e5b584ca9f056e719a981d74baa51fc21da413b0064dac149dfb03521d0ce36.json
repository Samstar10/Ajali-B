{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Final/Ajali-B/frontend/src/components/ResetPassword/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ResetPassword.css';\nimport LogNav from \"../LogNav/lognav\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleResetPassword = async event => {\n    event.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await fetch('/signup', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: newPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error while updating password');\n      }\n      const data = await response.json();\n      console.log(data);\n      setError(\"\");\n      navigate('/Login');\n    } catch (error) {\n      console.error(\"Update failed\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LogNav, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"resetform\",\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetformdiv1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resetform__text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Reset Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Please enter your email and new Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"emailinput\",\n          id: \"email\",\n          placeholder: \"Enter Your Email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"fause\",\n          icon: faUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetformdiv2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"passwordinput\",\n          id: \"newpassword\",\n          placeholder: \"Password\",\n          value: newPassword,\n          onChange: event => setNewPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"faloc\",\n          icon: faLock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetformdiv3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"confirmnewpasswordinput\",\n          id: \"confirmnewpassword\",\n          placeholder: \"Confirm-password\",\n          value: confirmNewPassword,\n          onChange: event => setConfirmNewPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"faloc1\",\n          icon: faLock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"resetbtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"sWqb44qjYhhttvdf/mSXZD5t4xk=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","LogNav","FontAwesomeIcon","faLock","faUser","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","error","setError","navigate","handleResetPassword","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","password","ok","Error","data","json","console","log","message","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","target","icon","style","color","_c","$RefreshReg$"],"sources":["/home/isaac/Final/Ajali-B/frontend/src/components/ResetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './ResetPassword.css';\nimport LogNav from \"../LogNav/lognav\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from \"react-router-dom\";\n\nconst ResetPassword = () => {\n    const [email, setEmail] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleResetPassword = async (event) => {\n        event.preventDefault();\n\n        if (newPassword !== confirmNewPassword) {\n            setError(\"Passwords do not match\")\n            return;\n        }\n\n        try {\n            const response = await fetch('/signup', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: newPassword,\n                }),\n            });\n            if (!response.ok) {\n                throw new Error('Error while updating password')\n            }\n            const data = await response.json()\n            console.log(data)\n            setError(\"\")\n            navigate('/Login')\n        }\n        catch (error) {\n            console.error(\"Update failed\", error.message)\n        }\n    };\n\n    return (\n        <LogNav>\n            <form className=\"resetform\" onSubmit={handleResetPassword}>\n                <div className=\"resetformdiv1\">\n                    <div className=\"resetform__text\">\n                    <h1>Reset Your Password</h1>\n                    <h5>Please enter your email and new Password</h5>\n                    </div>\n                    <input\n                        type=\"email\"\n                        className=\"emailinput\"\n                        id=\"email\"\n                        placeholder=\"Enter Your Email\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n                    <FontAwesomeIcon className=\"fause\" icon={faUser} />\n                </div>\n                <div className=\"resetformdiv2\">\n                    <input\n                        type=\"password\"\n                        className=\"passwordinput\"\n                        id=\"newpassword\"\n                        placeholder=\"Password\"\n                        value={newPassword}\n                        onChange={(event) => setNewPassword(event.target.value)}\n                    />\n                    <FontAwesomeIcon className=\"faloc\" icon={faLock} />\n                </div>\n                <div className=\"resetformdiv3\">\n                    <input\n                        type=\"password\"\n                        className=\"confirmnewpasswordinput\"\n                        id=\"confirmnewpassword\"\n                        placeholder=\"Confirm-password\"\n                        value={confirmNewPassword}\n                        onChange={(event) => setConfirmNewPassword(event.target.value)}\n                    />\n                    <FontAwesomeIcon className=\"faloc1\" icon={faLock} />\n                </div>\n                {error && (<div style={{color: \"red\"}}>{error}</div>)}\n                <button className=\"resetbtn\" type=\"submit\">Submit</button>\n            </form>\n        </LogNav>\n    )    \n}\n\nexport default ResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAC5B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,mBAAmB,GAAG,MAAOC,KAAK,IAAK;IACzCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIT,WAAW,KAAKE,kBAAkB,EAAE;MACpCG,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACJ;IAEA,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;QACpCC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBlB,KAAK,EAAEA,KAAK;UACZmB,QAAQ,EAAEjB;QACd,CAAC;MACL,CAAC,CAAC;MACF,IAAI,CAACU,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MACpD;MACA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBf,QAAQ,CAAC,EAAE,CAAC;MACZC,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,CACD,OAAOF,KAAK,EAAE;MACVkB,OAAO,CAAClB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACoB,OAAO,CAAC;IACjD;EACJ,CAAC;EAED,oBACI7B,OAAA,CAACN,MAAM;IAAAoC,QAAA,eACH9B,OAAA;MAAM+B,SAAS,EAAC,WAAW;MAACC,QAAQ,EAAEpB,mBAAoB;MAAAkB,QAAA,gBACtD9B,OAAA;QAAK+B,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC1B9B,OAAA;UAAK+B,SAAS,EAAC,iBAAiB;UAAAD,QAAA,gBAChC9B,OAAA;YAAA8B,QAAA,EAAI;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BpC,OAAA;YAAA8B,QAAA,EAAI;UAAwC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACNpC,OAAA;UACIqC,IAAI,EAAC,OAAO;UACZN,SAAS,EAAC,YAAY;UACtBO,EAAE,EAAC,OAAO;UACVC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAErC,KAAM;UACbsC,QAAQ,EAAG5B,KAAK,IAAKT,QAAQ,CAACS,KAAK,CAAC6B,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC,eACFpC,OAAA,CAACL,eAAe;UAACoC,SAAS,EAAC,OAAO;UAACY,IAAI,EAAE9C;QAAO;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNpC,OAAA;QAAK+B,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC1B9B,OAAA;UACIqC,IAAI,EAAC,UAAU;UACfN,SAAS,EAAC,eAAe;UACzBO,EAAE,EAAC,aAAa;UAChBC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAEnC,WAAY;UACnBoC,QAAQ,EAAG5B,KAAK,IAAKP,cAAc,CAACO,KAAK,CAAC6B,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eACFpC,OAAA,CAACL,eAAe;UAACoC,SAAS,EAAC,OAAO;UAACY,IAAI,EAAE/C;QAAO;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNpC,OAAA;QAAK+B,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC1B9B,OAAA;UACIqC,IAAI,EAAC,UAAU;UACfN,SAAS,EAAC,yBAAyB;UACnCO,EAAE,EAAC,oBAAoB;UACvBC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEjC,kBAAmB;UAC1BkC,QAAQ,EAAG5B,KAAK,IAAKL,qBAAqB,CAACK,KAAK,CAAC6B,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eACFpC,OAAA,CAACL,eAAe;UAACoC,SAAS,EAAC,QAAQ;UAACY,IAAI,EAAE/C;QAAO;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,EACL3B,KAAK,iBAAKT,OAAA;QAAK4C,KAAK,EAAE;UAACC,KAAK,EAAE;QAAK,CAAE;QAAAf,QAAA,EAAErB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAE,eACrDpC,OAAA;QAAQ+B,SAAS,EAAC,UAAU;QAACM,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB,CAAC;AAAAlC,EAAA,CApFKD,aAAa;EAAA,QAKEH,WAAW;AAAA;AAAAgD,EAAA,GAL1B7C,aAAa;AAsFnB,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}